@page "/form-example-1"
@using Microsoft.Extensions.Logging
@using BookGroup.Models 
@inject ILogger<SubmitPostModal> Logger
@using Microsoft.AspNetCore.Components.Forms

<div class="modal fade center" tabindex="-1" role="dialog" id="add-post-modal">
    <div class="modal-content">
        <EditForm Model="@post" OnSubmit="@Debug">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="modal-main-content">
                <h3 class="modal-title">Submit a new post</h3>

                <div class="form-group">
                    <label for="inputQuote">Quote</label>
                    <InputText name="quote" @bind-Value="@post.Quote" class="form-control" id="inputQuote" aria-describedby="quoteHelp" placeholder="Alas poor Yorick, I knew him well . . ." />
                    <small id="quoteHelp" class="form-text text-muted">Submit a quote or a general observation</small>
                </div>
                <div class="form-group">
                    <label for="inputQuoteLocation">Location of Quote</label>
                    <InputText @bind-Value="@post.QuoteLocation" name="quote" class="form-control" id="inputQuoteLocation" placeholder="End of chapter 5.2 / page 500 in Oxford edition" />
                </div>
            </div>

            <div class="modal-footer">
                <button OnClick="Debug" type="submit" class="btn btn-primary">Submit</button>
                <button class="btn btn-secondary">Close</button>
            </div>
        </EditForm>
    </div>
</div>


@code {
    //private User user = new User();
    BookGroup.Models.Post post = new BookGroup.Models.Post();
    void Debug()
    {
        int a = 1;
        a++;
    }
    private void HandleValidSubmit()
    {
        Logger.LogInformation("HandleSubmit called");
        //process form
    }
}
